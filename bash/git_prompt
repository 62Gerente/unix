#!/bin/bash

git-prompt () {
    # either a git branch exists or no repo at all, so go home
    git branch &>/dev/null || return 1;
    # set the HEAD reference
    GIT_PROMPT_HEAD="$(git symbolic-ref HEAD 2>/dev/null)";
    # extract the name of the branch from the reference
    GIT_PROMPT_BRANCH="${GIT_PROMPT_HEAD##*/}";

    if [ `git diff --name-only --diff-filter=U` ];
    then
        # that condition should return the list of conflicts
        GIT_PROMPT_STATUS="\[\e31;1m\]";
    else
        GIT_PROMPT_DIR_CLEAN=`git status | grep -F 'working directory clean'`;
        if [ "$GIT_PROMPT_DIR_CLEAN" ];
        then
            GIT_PROMPT_STATUS="\[\e[32m\]";
        else
            GIT_PROMPT_STATUS="\[\e[33m\]";
        fi;
    fi;
    echo "${GIT_PROMPT_STATUS}${GIT_PROMPT_BRANCH:-unknown}\[\e[0m\]";

    # cleanup
    unset GIT_PROMPT_HEAD;
    unset GIT_PROMPT_BRANCH;
    unset GIT_PROMPT_STATUS;
    unset GIT_PROMPT_DIR_CLEAN;
}

function git_prompt() {
    local git_status="`git status -unormal 2>&1`"
    if ! [[ "$git_status" =~ Not\ a\ git\ repo  ]]; then
                if [[ "$git_status" =~ nothing\ to\ commit  ]]; then
                    local ansi=32
                elif [[ "$git_status" =~ nothing\ added\ to\ commit\ but\ untracked\ files\present  ]]; then
                    local ansi=34
    else
    local ansi=33
    fi  
#    echo -n '\[\e[0;33;'"$ansi"'m\]'"$(__git_ps1)"'\[\e[0m\]'
    echo -n '\[\e[0;33;'"$ansi"'m\]' "$(git-prompt)" '\[\e[0m\]'
    fi
}

function _prompt_command() {
      PS1="[\[\033[32m\]\w\[\033[0m\]]\[\033[0m\]\n\[\033[1;36m\]\u@\[\033[0;37m\]\h] `git_prompt` \[\033[1;33m\]: \[\033[0m\]"
}

PROMPT_COMMAND=_prompt_command